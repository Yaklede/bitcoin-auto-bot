version: "3.8"

services:
  bot:
    build: .
    image: bitcoin-trading-bot:latest
    container_name: btc_bot
    env_file: .env
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 15s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    # 로그 관리 설정 (1주일 보관)
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        compress: "true"

  postgres:
    image: postgres:16
    container_name: btc_postgres
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # 로그 관리 설정 (DB 로그는 더 작게)
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "2"
        compress: "true"

  redis:
    image: redis:7
    container_name: btc_redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # 로그 관리 설정
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "2"
        compress: "true"

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: btc_prometheus
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'  # 200h에서 7d로 변경 (1주일)
      - '--storage.tsdb.retention.size=2GB'  # 최대 2GB 제한 추가
      - '--web.enable-lifecycle'
    restart: unless-stopped
    # 로그 관리 설정 (Prometheus는 로그가 많음)
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "2"
        compress: "true"

  grafana:
    image: grafana/grafana:10.4.7
    container_name: btc_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_LOG_LEVEL: warn  # 로그 레벨을 warn으로 설정
      GF_LOG_MAX_DAYS: 7  # 7일 보관
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    # 로그 관리 설정
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "2"
        compress: "true"

volumes:
  pgdata:
  redisdata:
  prometheus_data:
  grafana_data:
